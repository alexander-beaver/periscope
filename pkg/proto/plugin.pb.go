// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: plugin.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PluginCapability int32

const (
	PluginCapability_NONE               PluginCapability = 0
	PluginCapability_VIRTUAL_FILESYSTEM PluginCapability = 1
	PluginCapability_ANALYZER           PluginCapability = 2
	PluginCapability_TRANSFORMER        PluginCapability = 3
)

// Enum value maps for PluginCapability.
var (
	PluginCapability_name = map[int32]string{
		0: "NONE",
		1: "VIRTUAL_FILESYSTEM",
		2: "ANALYZER",
		3: "TRANSFORMER",
	}
	PluginCapability_value = map[string]int32{
		"NONE":               0,
		"VIRTUAL_FILESYSTEM": 1,
		"ANALYZER":           2,
		"TRANSFORMER":        3,
	}
)

func (x PluginCapability) Enum() *PluginCapability {
	p := new(PluginCapability)
	*p = x
	return p
}

func (x PluginCapability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PluginCapability) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_proto_enumTypes[0].Descriptor()
}

func (PluginCapability) Type() protoreflect.EnumType {
	return &file_plugin_proto_enumTypes[0]
}

func (x PluginCapability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PluginCapability.Descriptor instead.
func (PluginCapability) EnumDescriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{0}
}

type DataType int32

const (
	DataType_NULL DataType = 0
	DataType_END  DataType = 1
	DataType_STR  DataType = 2
	DataType_INT  DataType = 3
	DataType_DBL  DataType = 4
	DataType_BIN  DataType = 5
	DataType_BOOL DataType = 6
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0: "NULL",
		1: "END",
		2: "STR",
		3: "INT",
		4: "DBL",
		5: "BIN",
		6: "BOOL",
	}
	DataType_value = map[string]int32{
		"NULL": 0,
		"END":  1,
		"STR":  2,
		"INT":  3,
		"DBL":  4,
		"BIN":  5,
		"BOOL": 6,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_proto_enumTypes[1].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_plugin_proto_enumTypes[1]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{1}
}

type MessageType int32

const (
	MessageType_DYNAMIC   MessageType = 0
	MessageType_LOAD      MessageType = 1
	MessageType_ANALYZE   MessageType = 2
	MessageType_FILE_LS   MessageType = 3
	MessageType_FILE_READ MessageType = 4
	MessageType_SCORE     MessageType = 5
	MessageType_TRANSFORM MessageType = 6
	MessageType_ERROR     MessageType = 16
	MessageType_TERMINATE MessageType = 17
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "DYNAMIC",
		1:  "LOAD",
		2:  "ANALYZE",
		3:  "FILE_LS",
		4:  "FILE_READ",
		5:  "SCORE",
		6:  "TRANSFORM",
		16: "ERROR",
		17: "TERMINATE",
	}
	MessageType_value = map[string]int32{
		"DYNAMIC":   0,
		"LOAD":      1,
		"ANALYZE":   2,
		"FILE_LS":   3,
		"FILE_READ": 4,
		"SCORE":     5,
		"TRANSFORM": 6,
		"ERROR":     16,
		"TERMINATE": 17,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_proto_enumTypes[2].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_plugin_proto_enumTypes[2]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{2}
}

type EntryType int32

const (
	EntryType_UNKNOWN    EntryType = 0
	EntryType_FILE       EntryType = 1
	EntryType_DIRECTORY  EntryType = 2
	EntryType_COMPRESSED EntryType = 3
	EntryType_NO_INDEX   EntryType = 18
)

// Enum value maps for EntryType.
var (
	EntryType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "FILE",
		2:  "DIRECTORY",
		3:  "COMPRESSED",
		18: "NO_INDEX",
	}
	EntryType_value = map[string]int32{
		"UNKNOWN":    0,
		"FILE":       1,
		"DIRECTORY":  2,
		"COMPRESSED": 3,
		"NO_INDEX":   18,
	}
)

func (x EntryType) Enum() *EntryType {
	p := new(EntryType)
	*p = x
	return p
}

func (x EntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_proto_enumTypes[3].Descriptor()
}

func (EntryType) Type() protoreflect.EnumType {
	return &file_plugin_proto_enumTypes[3]
}

func (x EntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntryType.Descriptor instead.
func (EntryType) EnumDescriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{3}
}

type TransformEntryType int32

const (
	TransformEntryType_NOINDEX TransformEntryType = 0
	TransformEntryType_STRING  TransformEntryType = 1
	TransformEntryType_GROUP   TransformEntryType = 2
)

// Enum value maps for TransformEntryType.
var (
	TransformEntryType_name = map[int32]string{
		0: "NOINDEX",
		1: "STRING",
		2: "GROUP",
	}
	TransformEntryType_value = map[string]int32{
		"NOINDEX": 0,
		"STRING":  1,
		"GROUP":   2,
	}
)

func (x TransformEntryType) Enum() *TransformEntryType {
	p := new(TransformEntryType)
	*p = x
	return p
}

func (x TransformEntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransformEntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_proto_enumTypes[4].Descriptor()
}

func (TransformEntryType) Type() protoreflect.EnumType {
	return &file_plugin_proto_enumTypes[4]
}

func (x TransformEntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransformEntryType.Descriptor instead.
func (TransformEntryType) EnumDescriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{4}
}

type LoadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LaunchParams string `protobuf:"bytes,1,opt,name=launch_params,json=launchParams,proto3" json:"launch_params,omitempty"`
}

func (x *LoadRequest) Reset() {
	*x = LoadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadRequest) ProtoMessage() {}

func (x *LoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadRequest.ProtoReflect.Descriptor instead.
func (*LoadRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *LoadRequest) GetLaunchParams() string {
	if x != nil {
		return x.LaunchParams
	}
	return ""
}

type LoadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          int32              `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Capabilities    []PluginCapability `protobuf:"varint,2,rep,packed,name=capabilities,proto3,enum=plugin.PluginCapability" json:"capabilities,omitempty"`
	SetState        string             `protobuf:"bytes,3,opt,name=setState,proto3" json:"setState,omitempty"`
	Handlers        []string           `protobuf:"bytes,4,rep,name=handlers,proto3" json:"handlers,omitempty"`
	ShouldNegotiate bool               `protobuf:"varint,5,opt,name=shouldNegotiate,proto3" json:"shouldNegotiate,omitempty"`
}

func (x *LoadResponse) Reset() {
	*x = LoadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadResponse) ProtoMessage() {}

func (x *LoadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadResponse.ProtoReflect.Descriptor instead.
func (*LoadResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *LoadResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *LoadResponse) GetCapabilities() []PluginCapability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *LoadResponse) GetSetState() string {
	if x != nil {
		return x.SetState
	}
	return ""
}

func (x *LoadResponse) GetHandlers() []string {
	if x != nil {
		return x.Handlers
	}
	return nil
}

func (x *LoadResponse) GetShouldNegotiate() bool {
	if x != nil {
		return x.ShouldNegotiate
	}
	return false
}

type NegotiateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq   int32    `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	Type  DataType `protobuf:"varint,2,opt,name=type,proto3,enum=plugin.DataType" json:"type,omitempty"`
	Input string   `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *NegotiateRequest) Reset() {
	*x = NegotiateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NegotiateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NegotiateRequest) ProtoMessage() {}

func (x *NegotiateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NegotiateRequest.ProtoReflect.Descriptor instead.
func (*NegotiateRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *NegotiateRequest) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *NegotiateRequest) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_NULL
}

func (x *NegotiateRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

type NegotiateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq     int32    `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Html    string   `protobuf:"bytes,3,opt,name=html,proto3" json:"html,omitempty"`
	Type    DataType `protobuf:"varint,4,opt,name=type,proto3,enum=plugin.DataType" json:"type,omitempty"`
}

func (x *NegotiateResponse) Reset() {
	*x = NegotiateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NegotiateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NegotiateResponse) ProtoMessage() {}

func (x *NegotiateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NegotiateResponse.ProtoReflect.Descriptor instead.
func (*NegotiateResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *NegotiateResponse) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *NegotiateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NegotiateResponse) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *NegotiateResponse) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_NULL
}

// File Operations
type ReadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mime string `protobuf:"bytes,3,opt,name=mime,proto3" json:"mime,omitempty"`
}

func (x *ReadFileRequest) Reset() {
	*x = ReadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileRequest) ProtoMessage() {}

func (x *ReadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileRequest.ProtoReflect.Descriptor instead.
func (*ReadFileRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *ReadFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReadFileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReadFileRequest) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url        string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProviderId string `protobuf:"bytes,3,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	MimeType   string `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Size       uint64 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Sha256     string `protobuf:"bytes,18,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Md5        string `protobuf:"bytes,19,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *File) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *File) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *File) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *File) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

type DirectoryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string    `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	EntryType EntryType `protobuf:"varint,2,opt,name=entry_type,json=entryType,proto3,enum=plugin.EntryType" json:"entry_type,omitempty"`
	Name      string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Mime      string    `protobuf:"bytes,4,opt,name=mime,proto3" json:"mime,omitempty"`
	Provider  string    `protobuf:"bytes,36,opt,name=provider,proto3" json:"provider,omitempty"`
	Final     bool      `protobuf:"varint,37,opt,name=final,proto3" json:"final,omitempty"`
}

func (x *DirectoryEntry) Reset() {
	*x = DirectoryEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryEntry) ProtoMessage() {}

func (x *DirectoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryEntry.ProtoReflect.Descriptor instead.
func (*DirectoryEntry) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *DirectoryEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DirectoryEntry) GetEntryType() EntryType {
	if x != nil {
		return x.EntryType
	}
	return EntryType_UNKNOWN
}

func (x *DirectoryEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DirectoryEntry) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

func (x *DirectoryEntry) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *DirectoryEntry) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

type ListChildrenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path        string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	RequestSize int64  `protobuf:"varint,2,opt,name=requestSize,proto3" json:"requestSize,omitempty"`
}

func (x *ListChildrenRequest) Reset() {
	*x = ListChildrenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChildrenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChildrenRequest) ProtoMessage() {}

func (x *ListChildrenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChildrenRequest.ProtoReflect.Descriptor instead.
func (*ListChildrenRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *ListChildrenRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListChildrenRequest) GetRequestSize() int64 {
	if x != nil {
		return x.RequestSize
	}
	return 0
}

type ListChildrenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry      []*DirectoryEntry `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
	Incomplete bool              `protobuf:"varint,2,opt,name=incomplete,proto3" json:"incomplete,omitempty"`
}

func (x *ListChildrenResponse) Reset() {
	*x = ListChildrenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChildrenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChildrenResponse) ProtoMessage() {}

func (x *ListChildrenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChildrenResponse.ProtoReflect.Descriptor instead.
func (*ListChildrenResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *ListChildrenResponse) GetEntry() []*DirectoryEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *ListChildrenResponse) GetIncomplete() bool {
	if x != nil {
		return x.Incomplete
	}
	return false
}

type AnalyzeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *File  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=Url,proto3" json:"Url,omitempty"`
}

func (x *AnalyzeRequest) Reset() {
	*x = AnalyzeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeRequest) ProtoMessage() {}

func (x *AnalyzeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{9}
}

func (x *AnalyzeRequest) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *AnalyzeRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type AnalyzeFinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score       int32  `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	Location    string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Contents    string `protobuf:"bytes,3,opt,name=contents,proto3" json:"contents,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AnalyzeFinding) Reset() {
	*x = AnalyzeFinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeFinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeFinding) ProtoMessage() {}

func (x *AnalyzeFinding) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeFinding.ProtoReflect.Descriptor instead.
func (*AnalyzeFinding) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{10}
}

func (x *AnalyzeFinding) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *AnalyzeFinding) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *AnalyzeFinding) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

func (x *AnalyzeFinding) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AnalyzeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score    int32             `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	File     *File             `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Findings []*AnalyzeFinding `protobuf:"bytes,3,rep,name=findings,proto3" json:"findings,omitempty"`
}

func (x *AnalyzeResponse) Reset() {
	*x = AnalyzeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeResponse) ProtoMessage() {}

func (x *AnalyzeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{11}
}

func (x *AnalyzeResponse) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *AnalyzeResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *AnalyzeResponse) GetFindings() []*AnalyzeFinding {
	if x != nil {
		return x.Findings
	}
	return nil
}

type TransformRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *TransformRequest) Reset() {
	*x = TransformRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransformRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformRequest) ProtoMessage() {}

func (x *TransformRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformRequest.ProtoReflect.Descriptor instead.
func (*TransformRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{12}
}

func (x *TransformRequest) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

type TransformResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *File  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *TransformResponse) Reset() {
	*x = TransformResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransformResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformResponse) ProtoMessage() {}

func (x *TransformResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformResponse.ProtoReflect.Descriptor instead.
func (*TransformResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{13}
}

func (x *TransformResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *TransformResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type TransformEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        TransformEntryType `protobuf:"varint,1,opt,name=type,proto3,enum=plugin.TransformEntryType" json:"type,omitempty"`
	Uid         uint64             `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Contents    string             `protobuf:"bytes,3,opt,name=contents,proto3" json:"contents,omitempty"`
	Children    []*TransformEntry  `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`
	Correlation float64            `protobuf:"fixed64,5,opt,name=correlation,proto3" json:"correlation,omitempty"`
}

func (x *TransformEntry) Reset() {
	*x = TransformEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransformEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformEntry) ProtoMessage() {}

func (x *TransformEntry) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformEntry.ProtoReflect.Descriptor instead.
func (*TransformEntry) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{14}
}

func (x *TransformEntry) GetType() TransformEntryType {
	if x != nil {
		return x.Type
	}
	return TransformEntryType_NOINDEX
}

func (x *TransformEntry) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *TransformEntry) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

func (x *TransformEntry) GetChildren() []*TransformEntry {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *TransformEntry) GetCorrelation() float64 {
	if x != nil {
		return x.Correlation
	}
	return 0
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type        MessageType `protobuf:"varint,2,opt,name=type,proto3,enum=plugin.MessageType" json:"type,omitempty"`
	PluginState string      `protobuf:"bytes,3,opt,name=pluginState,proto3" json:"pluginState,omitempty"`
	// Types that are assignable to Request:
	//
	//	*Request_Load
	//	*Request_Ls
	//	*Request_Cat
	//	*Request_Analyze
	//	*Request_Transform
	//	*Request_Terminate
	Request isRequest_Request `protobuf_oneof:"request"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{15}
}

func (x *Request) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Request) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_DYNAMIC
}

func (x *Request) GetPluginState() string {
	if x != nil {
		return x.PluginState
	}
	return ""
}

func (m *Request) GetRequest() isRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *Request) GetLoad() *LoadRequest {
	if x, ok := x.GetRequest().(*Request_Load); ok {
		return x.Load
	}
	return nil
}

func (x *Request) GetLs() *ListChildrenRequest {
	if x, ok := x.GetRequest().(*Request_Ls); ok {
		return x.Ls
	}
	return nil
}

func (x *Request) GetCat() *ReadFileRequest {
	if x, ok := x.GetRequest().(*Request_Cat); ok {
		return x.Cat
	}
	return nil
}

func (x *Request) GetAnalyze() *AnalyzeRequest {
	if x, ok := x.GetRequest().(*Request_Analyze); ok {
		return x.Analyze
	}
	return nil
}

func (x *Request) GetTransform() *TransformRequest {
	if x, ok := x.GetRequest().(*Request_Transform); ok {
		return x.Transform
	}
	return nil
}

func (x *Request) GetTerminate() *TerminateRequest {
	if x, ok := x.GetRequest().(*Request_Terminate); ok {
		return x.Terminate
	}
	return nil
}

type isRequest_Request interface {
	isRequest_Request()
}

type Request_Load struct {
	Load *LoadRequest `protobuf:"bytes,17,opt,name=load,proto3,oneof"`
}

type Request_Ls struct {
	Ls *ListChildrenRequest `protobuf:"bytes,18,opt,name=ls,proto3,oneof"`
}

type Request_Cat struct {
	Cat *ReadFileRequest `protobuf:"bytes,19,opt,name=cat,proto3,oneof"`
}

type Request_Analyze struct {
	Analyze *AnalyzeRequest `protobuf:"bytes,20,opt,name=analyze,proto3,oneof"`
}

type Request_Transform struct {
	Transform *TransformRequest `protobuf:"bytes,21,opt,name=transform,proto3,oneof"`
}

type Request_Terminate struct {
	Terminate *TerminateRequest `protobuf:"bytes,22,opt,name=terminate,proto3,oneof"`
}

func (*Request_Load) isRequest_Request() {}

func (*Request_Ls) isRequest_Request() {}

func (*Request_Cat) isRequest_Request() {}

func (*Request_Analyze) isRequest_Request() {}

func (*Request_Transform) isRequest_Request() {}

func (*Request_Terminate) isRequest_Request() {}

type TerminateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TerminateRequest) Reset() {
	*x = TerminateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateRequest) ProtoMessage() {}

func (x *TerminateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateRequest.ProtoReflect.Descriptor instead.
func (*TerminateRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{16}
}

func (x *TerminateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TerminateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TerminateResponse) Reset() {
	*x = TerminateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateResponse) ProtoMessage() {}

func (x *TerminateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateResponse.ProtoReflect.Descriptor instead.
func (*TerminateResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{17}
}

func (x *TerminateResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trace   string `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{18}
}

func (x *Error) GetTrace() string {
	if x != nil {
		return x.Trace
	}
	return ""
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type        MessageType `protobuf:"varint,2,opt,name=type,proto3,enum=plugin.MessageType" json:"type,omitempty"`
	PluginState string      `protobuf:"bytes,3,opt,name=pluginState,proto3" json:"pluginState,omitempty"`
	Incomplete  bool        `protobuf:"varint,4,opt,name=incomplete,proto3" json:"incomplete,omitempty"`
	// Types that are assignable to Response:
	//
	//	*Response_Err
	//	*Response_Load
	//	*Response_Ls
	//	*Response_Cat
	//	*Response_Analyze
	//	*Response_Transform
	//	*Response_Terminate
	Response isResponse_Response `protobuf_oneof:"response"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{19}
}

func (x *Response) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Response) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_DYNAMIC
}

func (x *Response) GetPluginState() string {
	if x != nil {
		return x.PluginState
	}
	return ""
}

func (x *Response) GetIncomplete() bool {
	if x != nil {
		return x.Incomplete
	}
	return false
}

func (m *Response) GetResponse() isResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *Response) GetErr() *Error {
	if x, ok := x.GetResponse().(*Response_Err); ok {
		return x.Err
	}
	return nil
}

func (x *Response) GetLoad() *LoadResponse {
	if x, ok := x.GetResponse().(*Response_Load); ok {
		return x.Load
	}
	return nil
}

func (x *Response) GetLs() *ListChildrenResponse {
	if x, ok := x.GetResponse().(*Response_Ls); ok {
		return x.Ls
	}
	return nil
}

func (x *Response) GetCat() *File {
	if x, ok := x.GetResponse().(*Response_Cat); ok {
		return x.Cat
	}
	return nil
}

func (x *Response) GetAnalyze() *AnalyzeResponse {
	if x, ok := x.GetResponse().(*Response_Analyze); ok {
		return x.Analyze
	}
	return nil
}

func (x *Response) GetTransform() *TransformResponse {
	if x, ok := x.GetResponse().(*Response_Transform); ok {
		return x.Transform
	}
	return nil
}

func (x *Response) GetTerminate() *TerminateResponse {
	if x, ok := x.GetResponse().(*Response_Terminate); ok {
		return x.Terminate
	}
	return nil
}

type isResponse_Response interface {
	isResponse_Response()
}

type Response_Err struct {
	Err *Error `protobuf:"bytes,16,opt,name=err,proto3,oneof"`
}

type Response_Load struct {
	Load *LoadResponse `protobuf:"bytes,17,opt,name=load,proto3,oneof"`
}

type Response_Ls struct {
	Ls *ListChildrenResponse `protobuf:"bytes,18,opt,name=ls,proto3,oneof"`
}

type Response_Cat struct {
	Cat *File `protobuf:"bytes,19,opt,name=cat,proto3,oneof"`
}

type Response_Analyze struct {
	Analyze *AnalyzeResponse `protobuf:"bytes,20,opt,name=analyze,proto3,oneof"`
}

type Response_Transform struct {
	Transform *TransformResponse `protobuf:"bytes,21,opt,name=transform,proto3,oneof"`
}

type Response_Terminate struct {
	Terminate *TerminateResponse `protobuf:"bytes,22,opt,name=terminate,proto3,oneof"`
}

func (*Response_Err) isResponse_Response() {}

func (*Response_Load) isResponse_Response() {}

func (*Response_Ls) isResponse_Response() {}

func (*Response_Cat) isResponse_Response() {}

func (*Response_Analyze) isResponse_Response() {}

func (*Response_Transform) isResponse_Response() {}

func (*Response_Terminate) isResponse_Response() {}

var File_plugin_proto protoreflect.FileDescriptor

var file_plugin_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0x32, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x0c, 0x4c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x68, 0x6f,
	0x75, 0x6c, 0x64, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x22, 0x60, 0x0a, 0x10, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x79, 0x0a, 0x11, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x4d, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x22,
	0xa8, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x30, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x22, 0x4b, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x64, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x22, 0x44, 0x0a, 0x0e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x0f, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08,
	0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x34, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x47,
	0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xc4, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e,
	0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x2d, 0x0a, 0x02, 0x6c, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x02, 0x6c, 0x73, 0x12,
	0x2b, 0x0a, 0x03, 0x63, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x03, 0x63, 0x61, 0x74, 0x12, 0x32, 0x0a, 0x07,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x22, 0x0a, 0x10, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0xdd, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x2a, 0x0a, 0x04,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x02, 0x6c, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x02, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x03, 0x63, 0x61, 0x74, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x03, 0x63, 0x61, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x7a, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x12,
	0x39, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2a, 0x53, 0x0a, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x16, 0x0a, 0x12, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x53,
	0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x4e, 0x41, 0x4c, 0x59,
	0x5a, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x4f,
	0x52, 0x4d, 0x45, 0x52, 0x10, 0x03, 0x2a, 0x4b, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x45, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x54, 0x52, 0x10, 0x02, 0x12, 0x07,
	0x0a, 0x03, 0x49, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x42, 0x4c, 0x10, 0x04,
	0x12, 0x07, 0x0a, 0x03, 0x42, 0x49, 0x4e, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f,
	0x4c, 0x10, 0x06, 0x2a, 0x81, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e,
	0x41, 0x4c, 0x59, 0x5a, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x49, 0x4c, 0x45, 0x5f,
	0x4c, 0x53, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x41,
	0x44, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x10, 0x05, 0x12, 0x0d,
	0x0a, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x06, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x10, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x45, 0x52, 0x4d,
	0x49, 0x4e, 0x41, 0x54, 0x45, 0x10, 0x11, 0x2a, 0x4f, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x44,
	0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f,
	0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f,
	0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x12, 0x2a, 0x38, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x4e, 0x4f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x10, 0x02, 0x32, 0x54, 0x0a, 0x0a, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x46, 0x0a, 0x09, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x32, 0x81, 0x01, 0x0a, 0x06, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x12, 0x33, 0x0a, 0x04, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x13, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x7c, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x02, 0x4c, 0x73, 0x12,
	0x1b, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x2e, 0x0a, 0x03, 0x43, 0x61,
	0x74, 0x12, 0x17, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x32, 0x48, 0x0a, 0x08, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x07, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a,
	0x65, 0x12, 0x16, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x32, 0x51, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x18, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugin_proto_rawDescOnce sync.Once
	file_plugin_proto_rawDescData = file_plugin_proto_rawDesc
)

func file_plugin_proto_rawDescGZIP() []byte {
	file_plugin_proto_rawDescOnce.Do(func() {
		file_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugin_proto_rawDescData)
	})
	return file_plugin_proto_rawDescData
}

var file_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_plugin_proto_goTypes = []interface{}{
	(PluginCapability)(0),        // 0: plugin.PluginCapability
	(DataType)(0),                // 1: plugin.DataType
	(MessageType)(0),             // 2: plugin.MessageType
	(EntryType)(0),               // 3: plugin.EntryType
	(TransformEntryType)(0),      // 4: plugin.TransformEntryType
	(*LoadRequest)(nil),          // 5: plugin.LoadRequest
	(*LoadResponse)(nil),         // 6: plugin.LoadResponse
	(*NegotiateRequest)(nil),     // 7: plugin.NegotiateRequest
	(*NegotiateResponse)(nil),    // 8: plugin.NegotiateResponse
	(*ReadFileRequest)(nil),      // 9: plugin.ReadFileRequest
	(*File)(nil),                 // 10: plugin.File
	(*DirectoryEntry)(nil),       // 11: plugin.DirectoryEntry
	(*ListChildrenRequest)(nil),  // 12: plugin.ListChildrenRequest
	(*ListChildrenResponse)(nil), // 13: plugin.ListChildrenResponse
	(*AnalyzeRequest)(nil),       // 14: plugin.AnalyzeRequest
	(*AnalyzeFinding)(nil),       // 15: plugin.AnalyzeFinding
	(*AnalyzeResponse)(nil),      // 16: plugin.AnalyzeResponse
	(*TransformRequest)(nil),     // 17: plugin.TransformRequest
	(*TransformResponse)(nil),    // 18: plugin.TransformResponse
	(*TransformEntry)(nil),       // 19: plugin.TransformEntry
	(*Request)(nil),              // 20: plugin.Request
	(*TerminateRequest)(nil),     // 21: plugin.TerminateRequest
	(*TerminateResponse)(nil),    // 22: plugin.TerminateResponse
	(*Error)(nil),                // 23: plugin.Error
	(*Response)(nil),             // 24: plugin.Response
}
var file_plugin_proto_depIdxs = []int32{
	0,  // 0: plugin.LoadResponse.capabilities:type_name -> plugin.PluginCapability
	1,  // 1: plugin.NegotiateRequest.type:type_name -> plugin.DataType
	1,  // 2: plugin.NegotiateResponse.type:type_name -> plugin.DataType
	3,  // 3: plugin.DirectoryEntry.entry_type:type_name -> plugin.EntryType
	11, // 4: plugin.ListChildrenResponse.entry:type_name -> plugin.DirectoryEntry
	10, // 5: plugin.AnalyzeRequest.file:type_name -> plugin.File
	10, // 6: plugin.AnalyzeResponse.file:type_name -> plugin.File
	15, // 7: plugin.AnalyzeResponse.findings:type_name -> plugin.AnalyzeFinding
	10, // 8: plugin.TransformRequest.file:type_name -> plugin.File
	10, // 9: plugin.TransformResponse.file:type_name -> plugin.File
	4,  // 10: plugin.TransformEntry.type:type_name -> plugin.TransformEntryType
	19, // 11: plugin.TransformEntry.children:type_name -> plugin.TransformEntry
	2,  // 12: plugin.Request.type:type_name -> plugin.MessageType
	5,  // 13: plugin.Request.load:type_name -> plugin.LoadRequest
	12, // 14: plugin.Request.ls:type_name -> plugin.ListChildrenRequest
	9,  // 15: plugin.Request.cat:type_name -> plugin.ReadFileRequest
	14, // 16: plugin.Request.analyze:type_name -> plugin.AnalyzeRequest
	17, // 17: plugin.Request.transform:type_name -> plugin.TransformRequest
	21, // 18: plugin.Request.terminate:type_name -> plugin.TerminateRequest
	2,  // 19: plugin.Response.type:type_name -> plugin.MessageType
	23, // 20: plugin.Response.err:type_name -> plugin.Error
	6,  // 21: plugin.Response.load:type_name -> plugin.LoadResponse
	13, // 22: plugin.Response.ls:type_name -> plugin.ListChildrenResponse
	10, // 23: plugin.Response.cat:type_name -> plugin.File
	16, // 24: plugin.Response.analyze:type_name -> plugin.AnalyzeResponse
	18, // 25: plugin.Response.transform:type_name -> plugin.TransformResponse
	22, // 26: plugin.Response.terminate:type_name -> plugin.TerminateResponse
	7,  // 27: plugin.Negotiator.Negotiate:input_type -> plugin.NegotiateRequest
	5,  // 28: plugin.Plugin.Load:input_type -> plugin.LoadRequest
	21, // 29: plugin.Plugin.Terminate:input_type -> plugin.TerminateRequest
	12, // 30: plugin.Connector.Ls:input_type -> plugin.ListChildrenRequest
	9,  // 31: plugin.Connector.Cat:input_type -> plugin.ReadFileRequest
	14, // 32: plugin.Analyzer.Analyze:input_type -> plugin.AnalyzeRequest
	17, // 33: plugin.Transformer.Transform:input_type -> plugin.TransformRequest
	8,  // 34: plugin.Negotiator.Negotiate:output_type -> plugin.NegotiateResponse
	6,  // 35: plugin.Plugin.Load:output_type -> plugin.LoadResponse
	22, // 36: plugin.Plugin.Terminate:output_type -> plugin.TerminateResponse
	11, // 37: plugin.Connector.Ls:output_type -> plugin.DirectoryEntry
	10, // 38: plugin.Connector.Cat:output_type -> plugin.File
	16, // 39: plugin.Analyzer.Analyze:output_type -> plugin.AnalyzeResponse
	18, // 40: plugin.Transformer.Transform:output_type -> plugin.TransformResponse
	34, // [34:41] is the sub-list for method output_type
	27, // [27:34] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_plugin_proto_init() }
func file_plugin_proto_init() {
	if File_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NegotiateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NegotiateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectoryEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChildrenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChildrenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeFinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransformRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransformResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransformEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugin_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*Request_Load)(nil),
		(*Request_Ls)(nil),
		(*Request_Cat)(nil),
		(*Request_Analyze)(nil),
		(*Request_Transform)(nil),
		(*Request_Terminate)(nil),
	}
	file_plugin_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*Response_Err)(nil),
		(*Response_Load)(nil),
		(*Response_Ls)(nil),
		(*Response_Cat)(nil),
		(*Response_Analyze)(nil),
		(*Response_Transform)(nil),
		(*Response_Terminate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugin_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_plugin_proto_goTypes,
		DependencyIndexes: file_plugin_proto_depIdxs,
		EnumInfos:         file_plugin_proto_enumTypes,
		MessageInfos:      file_plugin_proto_msgTypes,
	}.Build()
	File_plugin_proto = out.File
	file_plugin_proto_rawDesc = nil
	file_plugin_proto_goTypes = nil
	file_plugin_proto_depIdxs = nil
}
